<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyobo.koreait.mapper.UserMapper">

    <select id="get_cart" resultType="com.kyobo.koreait.domain.dtos.CartDTO">
        SELECT CART.`no`, CART.`bookISBN`, CART.`bookCount`, BOOK.`title`, BOOK.`price` FROM `cart_tbl` CART
        INNER JOIN `book_tbl` BOOK
        ON CART.bookISBN = BOOK.ISBN
        WHERE CART.`userEmail` = #{userEmail}
        ORDER BY CART.`no`;
    </select>

    <insert id="insert_books_in_cart" parameterType="java.util.List">
        INSERT INTO `cart_tbl` (`userEmail`, `bookISBN`) VALUES
        <foreach item="cartVOS" collection="list" separator=",">
            (#{cartVOS.userEmail}, #{cartVOS.bookISBN})
        </foreach>
        ON DUPLICATE KEY UPDATE
        `bookCount` = `bookCount` + 1
    </insert>

    <!--    1. 장바구니에서 +1 혹은 -1을 했을 경우-->
    <!--    2. 장바구니에서 책 개수를 직접 수정했을 경우-->
    <!--    ==> 장바구니 개수를 화면에 보이는 숫자 그대로 설정해주면 된다-->
    <update id="modify_book_count_in_cart" parameterType="com.kyobo.koreait.domain.vos.CartVO">
        UPDATE `cart_tbl` SET `bookCount` = #{bookCount}
        WHERE `bookISBN` = #{bookISBN} AND `userEmail` = #{userEmail}
    </update>

    <!--    1. 상품 상세페이지에서 장바구니를 눌렀을 경우-->
    <!--    2. 장바구니에 담겨있는 상품에서 몇 개만 주문/삭제 했을 경우-->
    <!--    ==> 장바구니 개수를 설정한 개수만큼 빼거나 더해야 한다-->
    <update id="modify_book_count_in_cart_by_count" parameterType="list">
        UPDATE `cart_tbl` SET `bookCount` = `bookCount` + #{bookCount}
        WHERE `bookISBN` = #{bookISBN} AND `userEmail` = #{userEmail}
    </update>


    <delete id="delete_book_in_cart" parameterType="java.util.List">
        DELETE FROM `cart_tbl`
        <where>
            <foreach collection="list" item="cartVO" separator="OR">
                (`userEmail` = #{cartVO.userEmail} AND `bookISBN` = #{cartVO.bookISBN})
            </foreach>
        </where>
    </delete>


    <select id="get_books_in_heart" resultType="com.kyobo.koreait.domain.vos.BookVO">
        SELECT BOOK.* FROM heart_tbl HEART
        INNER JOIN `book_tbl` BOOK
        ON BOOK.ISBN = HEART.bookISBN
        WHERE userEmail = #{userEmail};
    </select>

    <insert id="insert_books_in_heart" parameterType="java.util.List">
        INSERT IGNORE INTO `heart_tbl` (`userEmail`, `bookISBN`) VALUES
        <foreach collection="list" item="heartDTOS" separator=",">
            (#{heartDTOS.userEmail}, #{heartDTOS.bookISBN})
        </foreach>
    </insert>

    <!--  결제 관련 DBMS   -->
    <select id="get_payment" resultType="com.kyobo.koreait.domain.vos.PaymentVO">
        SELECT * FROM `payment_tbl` WHERE `userEmail` = #{userEmail}
    </select>

    <insert id="insert_payment" parameterType="com.kyobo.koreait.domain.vos.PaymentVO">
        INSERT INTO `payment_tbl`(`userEmail`, `paymentAmount`)
        VALUES (#{userEmail}, #{paymentAmount})
    </insert>

    <select id="get_order" resultType="com.kyobo.koreait.domain.dtos.CartDTO">
        SELECT `ORDER`.bookISBN, `ORDER`.bookCount, `BOOK`.title, `BOOK`.price
        FROM `order_tbl` `ORDER`
        INNER JOIN `book_tbl` `BOOK`
        ON `BOOK`.ISBN = `ORDER`.bookISBN
        WHERE `orderNo` = #{orderNo}
        ORDER BY `no`
    </select>

    <insert id="insert_order" parameterType="list">
        INSERT INTO `order_tbl` VALUES
        <foreach collection="list" item="cartVO" separator=",">
            (null, LAST_INSERT_ID(), #{cartVO.bookISBN}, #{cartVO.bookCount})
        </foreach>
    </insert>









</mapper>






